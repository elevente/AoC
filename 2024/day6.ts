const input = `.......................#...................#....#..#......#.................#.#..#........................#.#..............#.....#
................#.#.......#..#.......#.................................................................................#.##.......
............#..............#......................#...#.....#...#..........##.........#.....#.....................................
..#...#......................................#............................#..................#..........#..#......................
....#........#.#....................#..........#.....#.............#..#............................#..................#......#....
..........................................................#................#............................................#.........
..#............................#.....#...........................#...........#........##...........................#..#...........
.....................#...........................#.#..............#......................................#.........#....#.....#...
.#...#.#.................#....................#...............................................................#.#..........#......
....#....................................#...........................................#.....#..........#...........................
.......................#..........#..............#......#....#.......#........................................#.#.................
......#...........................................................#...#............#.................#............................
.......#.................#..#.....................#...............................................................................
..............#....................#.#..........#........#......#................#.................#..........#...................
#.#.......................................#.........................#...................................#.........................
...#.........................................................................................#................#..................#
#.....#....#............................................................#.........................#..................#.#..........
.#.....#.#.......#.#..................#.#......................#.......#.....#..#..................##.....#.......#...#...........
....#.........#.................................#..........#........#...............#................#...................#....#...
.................#...............#...#.................#.................................................#........................
....#...#...............................#..................................................#..........#................#.....#....
...........#........#....#.......#...#..........#...............#.....#.....#.....#..........#....................................
............#.........#.................#................#.................#.#..................................................#.
............#......................................#...................................................................#..........
...........#....#.....................................................................................#............#..........#...
..........#........................................#.............#.................#........................#..#.......#........#.
......#.............................#.................##..................................#.....................#.................
.#.................................#.............................................#.................##.....#..............#......#.
.........................#..............................#..........#...........#....#................#......................#.....
.......#...................#......##........................#.........#...........................................................
......................................................................##...........#................#.............................
....#...................................##...............................................#........................................
...##.....#..#........#.................#..............................................................#..........................
........##......#....................#..............................#......................#...................#..................
.........................................................#.......................................................#.#..............
..........#.............................#.........#...............#................#.#.........#..........................#.#.....
....................#...................#..#.......................................................#..........#...............#...
...........................................................#........................#.........#........#..........................
.......#..............#......#.................................#...................##...........................#.........#.......
#...#...............................................................................................................#.............
................................#..#....#............#...........#..................#.............................#...............
....................#..............#.........#.................................#.............#..##................................
#...#..................................................................................#.....#...........#........................
........#...........#........#...#..................#.....#....#.........#.........................#...........................#..
.............#...#...................................................................#...........#................................
.............#........................................#...#.............#..............................#..#.........#.............
...#.................................................................................#.............#..........................##..
...#..............................................................................................................................
................#.........#..................................#...................#................................................
...#................#...#.#.....................#...........#..................................#........#....#......#.............
..........................#.....................#..#...................................##........................................#
#........................#...............................................#........#..#..........#...........................#.....
.#............#.#..............................................................#...........#......................................
......#..................................................................#.......#..............................#...#....#........
........#........................#.........#.............#.....#..................................................................
...............................................................................#...........................................#......
........................#..................................#.....................................................#................
............................................................#..........................#.................#.......................#
.....................#..#.........................#..............#.............................#........#..............##......#..
.....................#.................................................#.......#............#........................#.......#....
......................#.....................................................#......#............................#.................
................................................................#...#..##..#.....................................#...............#
..............#..............................................................................................#....................
............................................#......#..........#...............................................................#...
....#.................................#..................................................................#..........##..#.........
............#.....#................................................................................#..........#.........#.........
.....................#......................................#.........#....................................................#....#.
.........................#...............................#...............................#....................#...................
.#.....................#.#.......................................#....#...........#.......................#.......................
.....................................................#.#..#......................................................................#
#..........#..........................#............................#.............#..................#.............#...........#...
........#.........................................................................................................................
..........#.............#.........................................#................................................#..............
...........#................................#.................#...........................#.............................#.........
..................#.........................................#.#..................#...#...........#.......#..#.....................
........................................................#...#.......................................................#.............
.........................................................................#.......#..#.....#.......................................
............#..............................................................#.........#..............#.............#...............
#...#..........................................#...........#.....#.....................................#...............#..........
...........................#............#.........................................................................................
...#..........................................#.......................................................................#...........
..............#......#.....#.....................#..........................#.....................................................
.........................#....#...................#...#.......#..............................#........................#...........
.............................#............^.#................................................#......#..#.#...........#............
....................................................................................#...#.#...................................#...
.......................#..............................##..............................................#...........................
......................#...................................................#..........................................#............
......#........................................................................#.....................................#............
.......................#.............................#........................#...........#...........#............#...........#..
....#...............#..#......#....#..................#.............#.......#...............#.......................#.............
............#...#..................#..............................................................................................
....#.......#.................#.......................................................#..#......#.................................
.........#......#..........#......................#.....................#..................#.#....................................
...............##.......................................................#...#.............................#.......#...............
........................................................##...................#...#............#......#............................
...........#...#..............#.............................................................#...................#............#....
...............................................#.....#.....#......................................................................
.#....................#...#........#....................#.#.........#..........#................................#................#
.............#.....#..#....................................#.#...........#.................................................#..#.#.
......#.....................................#....................................................................#................
............................................................##......#.....................#.......#.....................#...#.....
.#.......#......................#.................................................................................................
................#....#......................#.........#...................#........#.......##.....#...............................
..#....#....................#............................................................#.#......#............#.....#.#....#.....
.................................#.................................................#.......#......................................
..................#...........#....#.....................#......#...............#..................#....................##........
.##...............................................#............#...........................#......................................
.............#...........#...........................#..#.......#...#..........#......................#..........#................
.......#...................................#.................#....#..............................................................#
........#....................................................#.................#.....#.........#.#................................
................#.................................#.....................#.....#.....#............................##...............
..............................................##.................#..##........#...........#............#..........................
....#......................................#...............................................................................#......
..#..............#.#................#..#..............#.......................................#.#.......#..............#......#..#
.....#..............................................................................................................#.......#.....
..#.......#.#..........#.......#..................................#..........#.......#.................#...........#...........#..
...............#.....#................#............#................#............#.....#.#........#...............................
....#.....................#................#.....................................#......................#.#.......#....#..........
........#...............#...#.....................................................#........#.........#.........#..................
...#......#..........................#.....#..........................##.......#....#.............................................
.............#................................#............................#.....#.......#......#................................#
.......................#............#..........................#..................................................................
.................................................#..............#...#...........................#.................................
......#...................#..............................................................................................#....#..#
....................................#......#.....................#..............#.......#...................#.....................
............#...................................#...........#........#........#...........................................##......
#...........#..........................#....................................#.........#................................#..........
......##..#...............................................................#...............................#.........#.............
.......................#.....#.........................#...#.........................#.....#..........#.#...#.....................
.......................#..#.....#.....#..........................#.........#.....#....................#.....#....................#`;
const input2 = `....#.....
.........#
..........
..#.......
.......#..
..........
.#..^.....
........#.
#.........
......#...`;

const map = input2.split("\n").map(x => x.split(""));
const obstacle = "#";
const visited = "X";
const direction = ["^", ">", "v", "<"];
type Direction = (typeof direction)[number];
const directions: Record<Direction, number[]> = {
    "^": [-1, 0],
    ">": [0, 1],
    "v": [1, 0],
    "<": [0, -1]
};
let currPos = [6, 4];
// let currPos = [83, 42];
const outOfBounds = (map: any[][], pos: number[]): boolean => {
    if (pos[0] < 0) {
        return true;
    }
    if (pos[0] >= map.length) {
        return true;
    }
    if (pos[1] < 0) {
        return true;
    }
    if (pos[1] >= map[0].length) {
        return true;
    }
    return false;
}
// A
// const goToNextPosition = (): boolean => {
//     let currSymbol = map[currPos[0]][currPos[1]];
//     let currDir = directions[currSymbol];
//     let nextPos = [currPos[0] + currDir[0], currPos[1] + currDir[1]];
//     if (outOfBounds(map, nextPos)) {
//         map[currPos[0]][currPos[1]] = "X";
//         return false;
//     }
//     const nextSymbol = map[nextPos[0]][nextPos[1]];
//     if (nextSymbol == obstacle) {
//         const dirIndex = direction.findIndex(x => x == currSymbol);
//         currSymbol = dirIndex == direction.length - 1
//             ? direction[0]
//             : direction[dirIndex + 1];
//         currDir = directions[currSymbol];
//         map[currPos[0]][currPos[1]] = "X";
//         nextPos = [currPos[0] + currDir[0], currPos[1] + currDir[1]];
//         if (outOfBounds(map, nextPos)) {
//             map[currPos[0]][currPos[1]] = "X";
//             return false;
//         }
//         currPos = nextPos;
//         map[nextPos[0]][nextPos[1]] = currSymbol;
//         return true;
//     }
//     map[currPos[0]][currPos[1]] = "X";
//     currPos = nextPos;
//     map[nextPos[0]][nextPos[1]] = currSymbol;
//     return true;
// }

// let result = goToNextPosition();
// while (result) {
//     result = goToNextPosition();
// }
// const totalX = map.map(m => m.filter(x => x == "X").length).reduce((a, c) => a + c, 0);
// console.log(totalX);

// B
const goToNextPosition = (map: string[][], currPos: number[]): { result: number, currPos: number[] } => {
    let currSymbol = map[currPos[0]][currPos[1]];
    let currDir = directions[currSymbol];
    let nextPos = [currPos[0] + currDir[0], currPos[1] + currDir[1]];
    if (outOfBounds(map, nextPos)) {
        return { result: 1, currPos };
    }
    let nextSymbol = map[nextPos[0]][nextPos[1]];
    if (nextSymbol == currSymbol) {
        return { result: 2, currPos };
    }
    if (direction.includes(nextSymbol)) {
        const nextNextPos = [nextPos[0] + currDir[0], nextPos[1] + currDir[1]];
        const nextNextSymbol = map[nextNextPos[0]][nextNextPos[1]];
        if (nextNextSymbol == obstacle) {
            const dirIndex = direction.findIndex(x => x == currSymbol);
            const currSymbolMod = dirIndex == direction.length - 1
                ? direction[0]
                : direction[dirIndex + 1];
            if (nextSymbol == currSymbolMod) {
                return { result: 2, currPos };
            }            
        }
    }
    if (nextSymbol == obstacle) {
        const dirIndex = direction.findIndex(x => x == currSymbol);
        currSymbol = dirIndex == direction.length - 1
            ? direction[0]
            : direction[dirIndex + 1];
        currDir = directions[currSymbol];
        nextPos = [currPos[0] + currDir[0], currPos[1] + currDir[1]];
        if (outOfBounds(map, nextPos)) {
            return { result: 1, currPos };
        }
        nextSymbol = map[nextPos[0]][nextPos[1]];
        if (nextSymbol == obstacle) {
            const dirIndex = direction.findIndex(x => x == currSymbol);
            currSymbol = dirIndex == direction.length - 1
                ? direction[0]
                : direction[dirIndex + 1];
            currDir = directions[currSymbol];
            nextPos = [currPos[0] + currDir[0], currPos[1] + currDir[1]];
            if (outOfBounds(map, nextPos)) {
                return { result: 1, currPos };
            }
            nextSymbol = map[nextPos[0]][nextPos[1]];            
        }
        if (direction.includes(nextSymbol)) {
            const nextNextPos = [nextPos[0] + currDir[0], nextPos[1] + currDir[1]];
            const nextNextSymbol = map[nextNextPos[0]][nextNextPos[1]];
            if (nextNextSymbol == obstacle) {
                const dirIndex = direction.findIndex(x => x == currSymbol);
                const currSymbolMod = dirIndex == direction.length - 1
                    ? direction[0]
                    : direction[dirIndex + 1];
                if (nextSymbol == currSymbolMod) {
                    return { result: 2, currPos };
                }            
            }
        }
        currPos = nextPos;
        map[nextPos[0]][nextPos[1]] = currSymbol;
        return { result: 0, currPos };
    }
    currPos = nextPos;
    map[nextPos[0]][nextPos[1]] = currSymbol;
    return { result: 0, currPos };
}

let total = 0;
for (const i in map) {
    for (const j in map[i]) {
        if (map[i][j] == ".") {
            let localMap = JSON.parse(JSON.stringify(map));
            let localCurrPos = [ ...currPos ];
            localMap[i][j] = "#";
            // console.log(localMap);
            let result = goToNextPosition(localMap, localCurrPos);
            localCurrPos = result.currPos;
            while (!result.result) {
                result = goToNextPosition(localMap, localCurrPos);
                localCurrPos = result.currPos;
            }
            if (result.result == 2) {
                total++;
            }
            // console.log(`${i}/${j}`)
        }
    }
}
console.log(total);